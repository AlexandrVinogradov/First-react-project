{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/AddMessageForm/AddMessageForm.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","user","activeClassName","active","to","name","MessageItem","message","maxLength50","maxLenghtCreator","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","placeholder","component","Textarea","btnAddMessage","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messageElements","messages","m","newMessageText","usersMessage","dialogs_items","values","addMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,aAAe,8BAA8B,cAAgB,+BAA+B,OAAS,wBAAwB,KAAO,sBAAsB,SAAW,4B,oBCAvLD,EAAOC,QAAU,CAAC,cAAgB,wC,+FCYnBC,EATI,SAACC,GAEhB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,wBAAIC,UAAWC,IAAEC,KAAMC,gBAAiBF,IAAEG,QAC7C,kBAAC,IAAD,CAASC,GAAIP,GAAOD,EAAMS,QCFnBC,EAJK,SAACV,GACjB,OAAO,wBAAIG,UAAWC,IAAEO,SAAUX,EAAMW,U,oDCEtCC,EAAcC,YAAiB,IAatBC,cAAU,CAACC,KAAM,wBAAjBD,EAXQ,SAACd,GACpB,OAAO,0BAAMgB,SAAUhB,EAAMiB,cACzB,6BACI,kBAACC,EAAA,EAAD,CAAOC,SAAU,CAACC,IAAUR,GAAcS,YAAY,qBACtDZ,KAAK,iBAAiBa,UAAWC,OAErC,6BACI,4BAAQpB,UAAWC,IAAEoB,eAArB,oBCmBGC,EA5BC,SAACzB,GAEb,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMP,GAAI6B,EAAE7B,GAAI8B,IAAKD,EAAE7B,QACpF+B,EAAkBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAAaxB,QAASwB,EAAExB,QAASqB,IAAKG,EAAEjC,QACjEwB,EAAMU,eAM3B,OACI,yBAAKjC,UAAWC,IAAEyB,SACd,yBAAK1B,UAAWC,IAAEiC,cACd,wBAAIlC,UAAWC,IAAEkC,eACZV,GAEL,wBAAIzB,UAAWC,IAAE8B,UACZD,IAGT,6BACI,kBAAC,EAAD,CAAgBjB,SAfR,SAACuB,GACjBvC,EAAMwC,WAAWD,EAAOE,sB,wDCX1BC,EAA6B,SAAChB,GAAD,MAAY,CAC3CiB,OAAQjB,EAAMkB,KAAKD,S,OCcRE,sBACXC,aAdoB,SAACpB,GACrB,MAAO,CACHC,YAAaD,EAAMC,gBAGA,SAACoB,GACxB,MAAO,CACHP,WAAY,SAACC,GACTM,EAASC,YAAwBP,UDPb,SAACQ,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAKnD,MAAM2C,OAET,kBAACM,EAAcE,KAAKnD,OAFI,kBAAC,IAAD,CAAUQ,GAAG,eAHT,GACX4C,IAAMH,WAQtC,OADqCH,YAAQJ,EAARI,CAAoCI,KCI9DL,CAGbpB","file":"static/js/3.543019aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersMessage\":\"Dialogs_usersMessage__367sT\",\"dialogs_items\":\"Dialogs_dialogs_items__3jH3z\",\"active\":\"Dialogs_active__3A4zG\",\"user\":\"Dialogs_user__1I2vG\",\"messages\":\"Dialogs_messages__2wBNS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnAddMessage\":\"AddMessageForm_btnAddMessage__3RC1o\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return <li className={s.user} activeClassName={s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </li>;\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst MessageItem = (props) => {\r\n    return <li className={s.message}>{props.message}</li>\r\n}\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { required, maxLenghtCreator } from '../../../utils/validators/validators';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport s from './AddMessageForm.module.css';\r\n\r\nconst maxLength50 = maxLenghtCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field validate={[required, maxLength50]} placeholder=\"Enter your message\" \r\n            name=\"newMessageBody\" component={Textarea} />\r\n        </div>\r\n        <div>\r\n            <button className={s.btnAddMessage}>Add message</button>\r\n        </div>\r\n    </form>\r\n}\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport MessageItem from './MessageItem/MessageItem';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id} />);\r\n    let messageElements = state.messages.map(m => <MessageItem message={m.message} key={m.id} />);\r\n    let newMessageText = state.newMessageText;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (        \r\n        <div className={s.dialogs}>\r\n            <div className={s.usersMessage}>\r\n                <ul className={s.dialogs_items}>\r\n                    {dialogsElements}\r\n                </ul>\r\n                <ul className={s.messages}>\r\n                    {messageElements}\r\n                </ul>\r\n            </div>\r\n            <div>\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}","import { addMessageActionCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n// compose transfer Dialogs in withAuthRedirect => expression transfer in connect\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect \r\n)(Dialogs);"],"sourceRoot":""}