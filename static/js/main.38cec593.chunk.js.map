{"version":3,"sources":["components/common/FormsControls/FormsControls.js","redux/dialogs-reducer.js","assets/images/preloader.gif","assets/images/avatar.jpg","components/common/FormsControls/FormsControls.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Friends/Friends.jsx","redux/news-reducer.js","components/News/NewsItem/NewsItem.jsx","components/News/News.jsx","components/News/NewsContainer.jsx","api/api.js","utils/object-helpers.js","redux/users-reduser.js","components/common/Ppaginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","redux/profile-reducer.js","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.js","components/Login/Login.jsx","redux/app-reducer.js","redux/redux-store.js","App.js","hoc/withSuspense.js","index.js","utils/validators/validators.js","components/Users/Users.module.css","components/Header/Header.module.css","components/Navbar/Navbar.module.css","components/Profile/MyPosts/MyPosts.module.css","components/News/News.module.css","assets/images/user.jpg","components/common/Ppaginator/Paginator.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Login/Login.module.css"],"names":["FormControl","input","meta","touched","error","children","hasError","className","s","formControl","Textarea","props","restProps","child","textarea","Input","createField","placeholder","name","validators","component","text","validate","initialState","dialogs","id","messages","message","addMessageActionCreator","newMessageBody","type","dialogsReducer","state","action","newMessage","module","exports","Boolean","window","location","hostname","match","Navbar","nav","ul","item","to","activeClassName","active","a","class","aria-hidden","data-text","home","Music","Settings","Friends","src","news","content","newsReducer","newText","newNewsText","newsText","NewsItem","AddNewsFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","btnAddNew","News","newsElements","newsPage","map","n","newsBlock","values","addNew","NewsContainer","connect","instance","axios","withCredentials","baseURL","headers","usersAPI","requestUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","email","password","rememberMe","captcha","securityAPI","updateObjectInArray","items","itemId","objPropName","newObjProps","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","disabled","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","userInfo","photos","small","userPhoto","avatar","btnFollou","some","userName","Users","Preloader","preloader","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","React","Component","compose","bind","page","totalCount","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","currentTarget","value","onBlur","autoFocus","ProfileDataFormReduxForm","btnSave","sForm","formSummaryError","field","Object","keys","contacts","contact","ProfileData","isOwner","goToEditMode","btnEdit","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","description_block","highBlock","large","for","initialValues","target","files","length","Post","memo","likesCount","line","maxLength10","maxLenghtCreator","AddPostFormRedux","required","button","MyPosts","postElements","profilePage","posts","postsBlock","title","addPost","newPostText","getUserProfile","profileReducer","newPost","postId","MyPostsContainer","Profile","ProfileContainer","params","authorizedUserId","history","refreshProfile","prevProps","prevState","auth","isAuth","file","getState","stopSubmit","Promise","reject","withRouter","Header","header","container","loginBlock","login","logout","exitBtn","loginBtnBlock","loginBtn","SET_USER_DATA","captchaUrl","setAuthUserData","payload","getAuthUserData","getCaptchaUrl","captchUrl","url","authReducer","HeaderContainer","LoginReduxForm","checkbox","_error","l","loginInfo","initialized","appReducer","reducers","combineReducers","dialogsPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","DialogsContainer","lazy","App","catchAllUnhandleErrors","reason","promise","initializeApp","addEventListener","removeEventListener","exact","path","render","Suspense","fallback","AppContainer","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","maxLength"],"mappings":"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","file":"static/js/main.38cec593.chunk.js","sourcesContent":["import React from 'react';\r\nimport s from './FormsControls.module.css';\r\nimport { Field } from 'redux-form';\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, children }) => {\r\n    const hasError = touched && error;\r\n    return <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n        <div>\r\n            {children}\r\n        </div>\r\n        {hasError && <span>{error}</span>}\r\n    </div>\r\n}\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} className={s.textarea} /></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n// 90 28:00\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}\r\n        /> {text}\r\n    </div>\r\n)\r\n\r\n","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: '1', name: 'Adriana' },\r\n        { id: '2', name: 'Roberto' },\r\n        { id: '3', name: 'Gabriela' },\r\n        { id: '4', name: 'Gerardo' },\r\n        { id: '5', name: 'Camila' },\r\n        { id: '6', name: 'Silvia' }\r\n    ],\r\n    messages: [\r\n        { id: '1', message: 'hi' },\r\n        { id: '2', message: 'Hoy are you?' },\r\n        { id: '3', message: 'Yo' }\r\n    ]\r\n}\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 4, message: newMessage }],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (newMessageBody) => ({ type: ADD_MESSAGE, newMessageBody });\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.cfec7f1a.gif\";","module.exports = __webpack_public_path__ + \"static/media/avatar.0049a098.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1_eJJ\",\"error\":\"FormsControls_error__3Bj7o\",\"formSummaryError\":\"FormsControls_formSummaryError__18Me8\",\"textarea\":\"FormsControls_textarea__FQuZ9\",\"input\":\"FormsControls_input__Id7Vv\",\"checkbox\":\"FormsControls_checkbox__r3VAk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__MtgDS\",\"contact\":\"ProfileInfo_contact__fOaRI\",\"highBlock\":\"ProfileInfo_highBlock__dfr1v\",\"btnEdit\":\"ProfileInfo_btnEdit__265Wj\",\"textarea\":\"ProfileInfo_textarea__1KGdg\",\"btnSave\":\"ProfileInfo_btnSave__nnO2B\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n        <ul className={s.ul}>\r\n            <li className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active} className={s.a}>\r\n                    <i class=\"fa fa-home\" aria-hidden=\"true\"></i>\r\n                    <div className={s.name} data-text={s.home} >\r\n                        Profile\r\n                    </div>\r\n                </NavLink></li>\r\n            <li className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.active} className={s.a}>\r\n                    <i class=\"fa fa-comments-o\" aria-hidden=\"true\"></i>\r\n                    <div className={s.name} data-text={s.home} >\r\n                        Message\r\n                    </div>\r\n                </NavLink></li>\r\n            <li className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.active} className={s.a}>\r\n                    <i class=\"fa fa-globe\" aria-hidden=\"true\"></i>  \r\n                    <div className={s.name} data-text={s.home} >\r\n                    News\r\n                    </div>\r\n                </NavLink></li>\r\n            <li className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.active} className={s.a}>\r\n                    <i class=\"fa fa-play\" aria-hidden=\"true\"></i>\r\n                    <div className={s.name} data-text={s.home} >\r\n                    Music\r\n                    </div>\r\n                </NavLink></li>\r\n            <li className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.active} className={s.a}>\r\n                    <i class=\"fa fa-sliders\" aria-hidden=\"true\"></i>\r\n                    <div className={s.name} data-text={s.home} >\r\n                    Settings\r\n                    </div>\r\n                </NavLink></li>\r\n            <li className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active} className={s.a}>\r\n                    <i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i>\r\n                    <div className={s.name} data-text={s.home} >\r\n                    Users\r\n                    </div>\r\n                </NavLink></li>\r\n        </ul>\r\n    </nav>;\r\n}\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\n\r\nconst Friends = (props) => {\r\n    return (\r\n        <div>\r\n            <div> Friends</div>\r\n            <ul>\r\n                <li><img src=\"https://i.pinimg.com/originals/09/4f/c6/\r\n                    094fc6adfddb1ba0fc6f73083e7c03bf.jpg\" /></li>\r\n                <li>переделать</li>\r\n                <li></li>\r\n            </ul>\r\n           \r\n        </div>\r\n    )\r\n}\r\nexport default Friends;","const ADD_NEW = 'ADD-NEW';\r\n\r\n\r\nlet initialState = {\r\n    news: [\r\n        { id: '1', content: 'Last month - June 2019 - 10th edition of ECMA-262 standard was officially published. What does it mean? - Well, ECMAScript 2019 is here!' },\r\n        { id: '2', content: 'The latest and greatest specification for JavaScript and other derivatives languages to follow.' },\r\n        { id: '3', content: 'And while you may already have heard of some of its new features, we`ll recall all of them! Plus some ECMAScript details and a sneak-peak of what`s coming next!' }\r\n    ],\r\n}\r\n\r\n\r\nconst newsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW:\r\n            let newText = action.newNewsText;\r\n            return {\r\n                ...state,\r\n                news: [...state.news, {id: 5, content: newText} ],\r\n                newsText: ''\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// action creator\r\nexport const addNew = (newNewsText) => ({ type: ADD_NEW, newNewsText });\r\n\r\n\r\nexport default newsReducer;","import React from 'react';\r\nimport s from './../News.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NewsItem = (props) => {\r\n\r\n    return <li className={s.news}>\r\n        {props.content}\r\n    </li>;\r\n}\r\n\r\nexport default NewsItem;","import React from 'react';\r\nimport s from './News.module.css';\r\nimport NewsItem from './NewsItem/NewsItem';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\n\r\nconst News = (props) => {\r\n    let state = props.newsPage;\r\n    let newsElements = state.news.map(n => <NewsItem content={n.content} id={n.id} />);\r\n    let onAddNews = (values) => {\r\n        props.addNew(values.newNewsText);\r\n    }\r\n    return (\r\n        <div>\r\n            <b>News:</b>\r\n            <div>\r\n                <div className={s.newsBlock}>\r\n                    {newsElements}  \r\n                </div>\r\n                <div>\r\n                    <AddNewsFormRedux onSubmit={onAddNews} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst AddNewNewsForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder=\"Enter your news\" name=\"newNewsText\" component={Textarea} />\r\n        </div>\r\n        <div>\r\n            <button className={s.btnAddNew}>Add news</button>\r\n        </div>\r\n    </form>\r\n}\r\nconst AddNewsFormRedux = reduxForm({form: 'profileAddNewPostForm'})(AddNewNewsForm);\r\nexport default News;\r\n\r\n","import { \r\n    addNew \r\n} from '../../redux/news-reducer';\r\nimport News from './News';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newsPage: state.newsPage\r\n    }\r\n}\r\nconst NewsContainer = connect(mapStateToProps, {\r\n    addNew\r\n})(News);\r\n\r\nexport default NewsContainer;\r\n\r\n","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"ae4c3a01-1d12-4498-85df-24268c218e2b\"\r\n    }\r\n});\r\nexport const usersAPI = {\r\n    requestUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI object');\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get('/profile/status/' + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('/profile/status/', { status: status });\r\n    },\r\n    savePhoto(photoFile) { //  27:00 (96)\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile);\r\n\r\n        return instance.put('/profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put('/profile', profile);\r\n    }\r\n}\r\nexport const authAPI = {\r\n    //function me returns promise\r\n    me() {\r\n        return instance.get('auth/me');\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post('auth/login', { email, password, rememberMe, captcha });\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login');\r\n    },\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get('security/get-captcha-url');\r\n    }\r\n}\r\n\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {    //49 26:00\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n    \r\n}\r\n\r\n\r\n","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', { followed: true })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', { followed: false })\r\n            }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setUsersTotalCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\r\n\r\n// Thunk \r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        //api transfer parametors\r\n        const data = await usersAPI.requestUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n    }\r\n}\r\n\r\n// to unite function for elimination duplicate of code\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    const response = await apiMethod(userId);\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n\r\n","import React, {useState} from 'react';\r\nimport s from './Paginator.module.css';\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={s.paginator}>\r\n        {portionNumber >= 1 &&\r\n            <button disabled={portionNumber <= 1}  onClick={() => { setPortionNumber(portionNumber - 1) }}>prev</button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={cn({\r\n                    [s.selectedPage]: currentPage === p\r\n                }, s.pageNumber)}\r\n                    key={p}\r\n                    onClick={(e) => {\r\n                        onPageChanged(p);\r\n                    }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n            <button  onClick={() => { setPortionNumber(portionNumber + 1) }}>next</button>}\r\n    </div>\r\n}\r\n\r\nexport default Paginator;                       ","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport userPhoto from '../../assets/images/user.jpg';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet User = ({ user, followingInProgress, unfollow, follow }) => {\r\n    return <div className={s.userInfo}>\r\n        <div>\r\n            <NavLink to={'/profile/' + user.id}>\r\n                <img src={user.photos.small != null\r\n                    ? user.photos.small\r\n                    : userPhoto} className={s.avatar} />\r\n            </NavLink>\r\n        </div>\r\n        <div className={s.btnFollou}>\r\n            {user.followed\r\n                ? <button disabled={followingInProgress\r\n                    .some(id => id === user.id)}\r\n                    onClick={() => { unfollow(user.id) }}>\r\n                    Unfollow</button>\r\n\r\n                : <button  disabled={followingInProgress\r\n                    .some(id => id === user.id)}\r\n                    onClick={() => { follow(user.id) }}>\r\n                    Follow</button>}\r\n        </div>\r\n        <div className={s.userName}>\r\n            <div>Name: {user.name}</div>\r\n            <div>Status: {user.status || 'nope'}</div>\r\n        </div>\r\n        </div>\r\n}\r\nexport default User;\r\n","import React from 'react';\r\nimport Paginator from '../common/Ppaginator/Paginator';\r\nimport User from './User';\r\n\r\nlet Users = ({ currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props }) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage}\r\n            totalItemsCount={totalUsersCount}\r\n            pageSize={pageSize}\r\n            onPageChanged={onPageChanged} />\r\n        <div>\r\n            {\r\n                users.map(u => <User key={u.id}\r\n                    followingInProgress={props.followingInProgress}\r\n                    user={u}\r\n                    unfollow={props.unfollow}\r\n                    follow={props.follow}\r\n                />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\nexport default Users;","import React from 'react';\r\nimport preloader from './../../../assets/images/preloader.gif';\r\n\r\nconst Preloader = (props) => {\r\n    return <div>\r\n    <img src={preloader}/>\r\n    </div> \r\n}\r\n\r\nexport default Preloader;","import { createSelector } from 'reselect';\r\n\r\n// fake filter for show reselect library\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getUsers = createSelector( getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n})\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n} from '../../redux/users-reduser';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport s from './Users.module.css';\r\nimport { compose } from \"redux\";\r\nimport {\r\n    getUsers,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getFollowingInProgress\r\n} from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const { currentPage, pageSize } = this.props\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        const { pageSize } = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    }\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <div className={s.preloader}><Preloader /></div> : null}\r\n\r\n            <Users users={this.props.users}\r\n                pageSize={this.props.pageSize}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                toggleIsFetching={this.props.toggleIsFetching}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, { follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers }),\r\n    //withAuthRedirect \r\n)(UsersContainer);","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMod = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status</b>: <span onDoubleClick={activateEditMode} >{props.status || 'NOPE'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                        onBlur={deactivateEditMod}\r\n                        autoFocus={true}\r\n                        value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport sForm from '../../common/FormsControls/FormsControls.module.css';\r\nimport { reduxForm } from 'redux-form';\r\nimport { createField, Input, Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button className={s.btnSave}>Save</button></div>\r\n        \r\n        {error && <div className={sForm.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        \r\n        <ul>\r\n            <li>\r\n                <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n            </li>\r\n            <li>\r\n                <b>About me</b>: {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n            </li>\r\n            <li>\r\n                <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, { type: 'checkbox' })}\r\n            </li>\r\n            <li>\r\n                <b>My professionals skills</b>: <div className={s.field}>{createField(\"My skills\", \"lookingForAJobDescription\", [], Textarea)}</div>\r\n            </li>\r\n            <li>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                    return <div key={key} className={s.contact}>\r\n                        <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n                    </div>\r\n                })}\r\n            </li>\r\n        </ul>\r\n    </form>\r\n}\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/images/user.jpg';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    const mainPhotoSelectrd = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    const onSubmit = (formData) => { // 97 1:09:00\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.description_block}>\r\n                <div className={s.highBlock}>\r\n                    <div>\r\n                        <img className={s.avatar} src={profile.photos.large || userPhoto} />\r\n                        {isOwner &&\r\n                            <label for='file'>\r\n                                Choose avatar\r\n                            </label>\r\n                        }\r\n                    </div>\r\n                    {editMode\r\n                        ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} /> //initialValues передаем profile, как стартовые значения\r\n                        : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\r\n\r\n                </div>\r\n                {isOwner && <input type={'file'} id='file' onChange={mainPhotoSelectrd} />}\r\n                \r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    return <div>\r\n        <div>\r\n            {isOwner && <button className={s.btnEdit} onClick={goToEditMode}>Edit</button>}\r\n        </div>\r\n        <ul>\r\n            <li>\r\n                <b>Full name</b>: {profile.fullName}\r\n            </li>\r\n            <li>\r\n                <b>About me</b>: {profile.aboutMe || ' ---'}\r\n            </li>\r\n            <li>\r\n                <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </li>\r\n            {profile.lookingForAJob &&\r\n                <li>\r\n                    <b>My professionals skills</b>: {profile.lookingForAJobDescription}\r\n                </li>\r\n            }\r\n            <li>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n                })}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n}\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    if (contactValue === \"\" || contactValue === null) {\r\n        return contactTitle = null\r\n    }\r\n    return <div className={s.contact}>\r\n        <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport avatar from '../../../../assets/images/avatar.jpg';\r\n\r\nexport const Post = React.memo(props => {\r\n    return <div className={s.item}>\r\n        <img src={avatar} />\r\n        {props.message}\r\n        <div className={s.post}>\r\n            <i class=\"fa fa-thumbs-up\" aria-hidden=\"true\"></i>\r\n            {props.likesCount}\r\n            <span> like</span>\r\n\r\n        </div>\r\n        <div className={s.line}></div>\r\n    </div>;\r\n});\r\n\r\nexport default Post;\r\n\r\n\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLenghtCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLenghtCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field className={s.textarea} validate={[required, maxLength10]}\r\n                name=\"newPostText\" component={Textarea} />\r\n        </div>\r\n        <div>\r\n            <button className={s.button}>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\nconst AddPostFormRedux = reduxForm({ form: 'profileAddNewPostForm' })(AddNewPostForm);\r\n// React.memo doesnt works...\r\nconst MyPosts = React.memo(props => {\r\n    // console.log('RENDER MYPOSTS')\r\n    let postElements = props.profilePage.posts.map(p =>\r\n        <Post key={p.id} message={p.message} likesCount={p.likesCount} />);\r\n\r\n    const addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n    return <div className={s.postsBlock}>\r\n        <h3 className={s.title}>My posts</h3>\r\n        <div>\r\n            <div>\r\n                <AddPostFormRedux onSubmit={addNewPost} />\r\n            </div>\r\n        </div>\r\n        <div className={s.posts}>\r\n            {postElements}\r\n        </div>\r\n    </div>;\r\n});\r\nexport default MyPosts;","import { usersAPI, profileAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: '1', message: 'Hi, how are you?', likesCount: 13 },\r\n        { id: '2', message: 'Can you help me with react?', likesCount: 19 },\r\n        { id: '3', message: 'Looking for a job', likesCount: 121 }\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n    photos: '3'\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = action.newPostText;\r\n            return {\r\n                ...state,\r\n                newPostText: '',\r\n                posts: [...state.posts, { id: 6, message: newPost, likesCount: 0 }]\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// action creator\r\nexport const addPost = (newPostText) => ({ type: ADD_POST, newPostText });\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId });\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status });\r\nexport const savePhotoSuccess = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos });\r\nexport const saveProfileSuccess = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos });\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    const response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => { //97\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n       dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile', {\"_error\": response.data.messages[0]} ));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n\r\n","import MyPosts from './MyPosts';\r\nimport {\r\n    addPost\r\n} from '../../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n    addPost\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return <div>\r\n        <ProfileInfo profile={props.profile} status={props.status}\r\n            updateStatus={props.updateStatus} isOwner={props.isOwner}\r\n            savePhoto={props.savePhoto} saveProfile={props.saveProfile} />\r\n        <MyPostsContainer />\r\n    </div>;\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile\r\n} from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n                savePhoto={this.props.savePhoto}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    withRouter,\r\n    // withAuthRedirect   \r\n)(ProfileContainer);","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <div className={s.container}>\r\n            <NavLink to={'/'}>\r\n                <img src=\"https://img.icons8.com/ios/2x/react-native.png\" />\r\n            </NavLink>\r\n\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login}  <button onClick={props.logout} className={s.exitBtn}>exit</button></div>\r\n                    : <div className={s.loginBtnBlock}><NavLink to={\"/login\"} className={s.loginBtn}>Login</NavLink></div>}\r\n            </div>\r\n        </div>\r\n    </header>\r\n}\r\nexport default Header;","import { authAPI, securityAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'react-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SECCESS = 'react-network/auth/GET_CAPTCHA_URL_SECCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null // null then captch is not required\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SECCESS: // (99  24:00)\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// action creator\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        { userId, email, login, isAuth }\r\n});\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SECCESS, payload: { captchaUrl }\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let { id, login, email } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n// thunk\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    const response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            const response = await securityAPI.getCaptchaUrl();\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n        dispatch(stopSubmit('login', { _error: message }));\r\n    }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchUrl));\r\n}\r\n\r\nexport default authReducer;\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport {\r\n    logout\r\n} from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Input, createField } from '../common/FormsControls/FormsControls';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport s from './../common/FormsControls/FormsControls.module.css';\r\nimport l from './Login.module.css';\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className={s.input}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n        </div>\r\n        <div className={s.input}>\r\n            {createField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\r\n        </div>\r\n        <div className={s.checkbox}>\r\n            {createField(null, \"rememberMe\", [], Input, { type: \"checkbox\" }, \"remember me\")}\r\n        </div>\r\n\r\n        {captchaUrl && <img src={captchaUrl} />}\r\n        {captchaUrl && createField('Symbols', \"captcha\", [required], Input, {})}\r\n\r\n        {error && <div className={s.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n    </form>\r\n}\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n    return <div className={l.loginBlock}>\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n        </div>\r\n        <div className={l.loginInfo}>\r\n            <p>Hello if you haven`t account you can use:</p>\r\n            <p>Login: <u>free@samuraijs.com</u></p>\r\n            <p>Password: <u>free</u></p>\r\n            <p>my id: 1487 you can use <u>...profile/1487</u></p>\r\n        </div>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, { login })(Login);","import { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\nimport { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess()); //80 20:00\r\n        });\r\n\r\n}\r\nexport default appReducer;\r\n\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\"\r\nimport newsReducer from \"./news-reducer\"\r\nimport dialogsReducer from \"./dialogs-reducer\"\r\nimport usersReducer from \"./users-reduser\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\n// branch - reducer\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    newsPage: newsReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport Friends from './components/Friends/Friends';\r\nimport { Route, withRouter, HashRouter, Switch, Redirect } from \"react-router-dom\";\r\n//import DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport NewsContainer from './components/News/NewsContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport { Provider, connect } from 'react-redux';\r\nimport { compose } from \"redux\";\r\nimport { initializeApp } from './redux/app-reducer';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport store from './redux/redux-store';\r\nimport { withSuspense } from './hoc/withSuspense';\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n\r\nclass App extends React.Component {\r\n  catchAllUnhandleErrors = (reason, promise) => {\r\n    // alert('some error occured');\r\n  }\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n    // catching every mistakes\r\n    window.addEventListener(\"unhandledrejection\", this.catchAllUnhandleErrors);\r\n  }\r\n  componentWillUnmount() {\r\n    // deleting garbage\r\n    window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandleErrors);\r\n  }\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n    return (\r\n      <div>\r\n        <HeaderContainer />\r\n        <div className='app-wrapper'>\r\n          <Navbar />\r\n          <div className='app-wraper-content'>\r\n            <Switch>\r\n              <Route exact path='/'\r\n                render={() => <Redirect to={'/profile'} />} />\r\n              <Route path='/dialogs'\r\n                render={withSuspense(DialogsContainer)} />\r\n              <Route path='/profile/:userId?'\r\n                render={() => <ProfileContainer />} />\r\n              <Route path='/news'\r\n                render={() => <NewsContainer />} />\r\n              <Route path='/music'\r\n                render={() => <Music />} />\r\n              <Route path='/settings'\r\n                render={() => <Settings />} />\r\n              <Route path='/friends'\r\n                render={() => <Friends />} />\r\n              <Route path='/users'\r\n                render={() => <UsersContainer />} />\r\n              <Route path='/login'\r\n                render={() => <Login />} />\r\n              <Route path='*'\r\n                render={() => <div>404 NOT FOUND</div>} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n//withRouter needs for elimination of bugs\r\nconst AppContainer = compose(\r\n  connect(mapStateToProps, { initializeApp }),\r\n  withRouter)(App);\r\nconst SamuraiJSApp = props => {\r\n  return <HashRouter>\r\n    <Provider store={store}>\r\n      <AppContainer />\r\n    </Provider>\r\n  </HashRouter>\r\n}\r\nexport default SamuraiJSApp;\r\n","import React from 'react';\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props}/> \r\n      </React.Suspense>\r\n    };\r\n}","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from './App';\n\nReactDOM.render(<SamuraiJSApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\nexport const maxLenghtCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Users_avatar__1WP5U\",\"preloader\":\"Users_preloader__ToFaR\",\"userInfo\":\"Users_userInfo__lujA5\",\"btnFollou\":\"Users_btnFollou__17SWR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1RC8r\",\"loginBlock\":\"Header_loginBlock__2BTFH\",\"container\":\"Header_container__2K3eO\",\"exitBtn\":\"Header_exitBtn__JutkD\",\"loginBtn\":\"Header_loginBtn__1BHhd\",\"loginBtnBlock\":\"Header_loginBtnBlock__2Yb5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__8-0-s\",\"ul\":\"Navbar_ul__1gJEH\",\"item\":\"Navbar_item__2bByP\",\"active\":\"Navbar_active__2Fx7s\",\"friends\":\"Navbar_friends__11O9C\",\"avatar\":\"Navbar_avatar__ZVwOQ\",\"a\":\"Navbar_a__3NC05\",\"name\":\"Navbar_name__3a0zs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"MyPosts_button__2-nZY\",\"FormsControls_textarea__FQuZ9\":\"MyPosts_FormsControls_textarea__FQuZ9__2xavX\",\"title\":\"MyPosts_title__3XO6T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnAddNew\":\"News_btnAddNew__OclnU\",\"newsBlock\":\"News_newsBlock__22Saq\"};","module.exports = __webpack_public_path__ + \"static/media/user.a60fdfaa.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__3DdOt\",\"pages\":\"Paginator_pages__27S-7\",\"paginator\":\"Paginator_paginator__1VpJV\",\"pageNumber\":\"Paginator_pageNumber__2Wz7u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__jVVtY\",\"post\":\"Post_post__3y9nu\",\"line\":\"Post_line__1D9jb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"Login_loginBlock__1epUZ\",\"loginInfo\":\"Login_loginInfo__2bBSs\"};"],"sourceRoot":""}