{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js"],"names":["module","exports","Post","props","className","s","item","src","message","likesCount","maxLength10","maxLenghtCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","placeholder","name","component","Textarea","MyPosts","React","memo","console","log","postElements","profilePage","posts","map","p","postsBlock","values","addPost","newPostText","Component","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","description_block","avatar","photos","large","userPhoto","aboutMe","Preloader","MyPostsContainer","connect","state","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.23e73601.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__3_Ylb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__jVVtY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panorama\":\"ProfileInfo_panorama__2x1bh\",\"avatar\":\"ProfileInfo_avatar__MtgDS\",\"description_block\":\"ProfileInfo_description_block__37nh6\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return <div className={s.item}>\r\n        <img src=\"https://i.pinimg.com/originals/09/4f/c6/094fc6adfddb1ba0fc6f73083e7c03bf.jpg\" />\r\n        {props.message}\r\n        <div>\r\n            {props.likesCount}\r\n            <span> like</span>\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLenghtCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLenghtCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field validate={[required, maxLength10]} placeholder=\"Enter your post\"\r\n                name=\"newPostText\" component={Textarea} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\nconst AddPostFormRedux = reduxForm({ form: 'profileAddNewPostForm' })(AddNewPostForm);\r\n\r\n// для того, чтобы внутрення компонента не отрисоваыволась просто так - оборачиваем ее React.memo, но не работет..\r\nconst MyPosts = React.memo(props => {\r\n    console.log('RENDER')\r\n    let postElements = props.profilePage.posts.map(p => <Post message={p.message} likesCount={p.likesCount} />);\r\n\r\n    const addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return <div className={s.postsBlock}>\r\n        <h3>My posts</h3>\r\n        <div>\r\n            <div>\r\n                <AddPostFormRedux onSubmit={addNewPost} />\r\n            </div>\r\n        </div>\r\n        <div className={s.posts}>\r\n            {postElements}\r\n        </div>\r\n    </div>;\r\n});\r\nexport default MyPosts;","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMod: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMod = () => {\r\n        // метод из React.Component   71lesson\r\n        this.setState({\r\n            editMod: true,\r\n        });\r\n    }\r\n    deactivateEditMod = () => {\r\n        this.setState({\r\n            editMod: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        debugger\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMod &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMod}> {this.props.status || 'NOPE'} </span>\r\n                    </div>\r\n                }\r\n                {this.state.editMod &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange}\r\n                            autoFocus={true}\r\n                            onBlur={this.deactivateEditMod.bind(this)}\r\n                            value={this.state.status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ProfileStatus;","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMod = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode} >{props.status || 'NOPE'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                        onBlur={deactivateEditMod}\r\n                        autoFocus={true}\r\n                        value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/images/user.jpg';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n    <div>\r\n        {/* <div>\r\n            <img className={s.panorama} src='https://wallimpex.com/data/out/642/3840-x-1080-hd-wallpaper-9980030.jpg' />\r\n        </div> */}\r\n        <div className={s.description_block}>\r\n            <div>\r\n                <img className={s.avatar} src='https://previews.123rf.com/images/bigio/bigio1602/bigio160200004/52547413-sch%C3%B6ne-zuckersch%C3%A4del-frau-illustration-tag-der-toten-vektor-illustration-.jpg' />\r\n            </div>\r\n\r\n            <img src={profile.photos.large\r\n            != null \r\n            ? profile.photos.large\r\n            : userPhoto}/>\r\n            <p>\r\n                {profile.aboutMe}\r\n            </p>\r\n        </div>\r\n        <ProfileStatusWithHooks status={status}  updateStatus={updateStatus}/>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPosts from './MyPosts';\r\nimport {\r\n    addPost\r\n} from '../../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n    addPost\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';  // doesn`t needed?\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} \r\n            updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer />\r\n    </div>;\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus\r\n} from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} \r\n            profile={this.props.profile} \r\n            status={this.props.status} \r\n            updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status, \r\n    authorizedUserId:  state.auth.userId, \r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n// compose берет Dialog, закидывает его в withAuthRedirect, \r\n//далее результат закидывает в withRouter => connect\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect   это hoc\r\n)(ProfileContainer);"],"sourceRoot":""}