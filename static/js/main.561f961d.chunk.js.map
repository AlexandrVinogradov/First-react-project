{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Users/Users.module.css","assets/images/preloader.gif","components/Profile/MyPosts/Post/Post.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Friends/Friends.jsx","redux/dialogs-reducer.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/MessageItem/MessageItem.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","redux/news-reducer.js","components/News/NewsItem/NewsItem.jsx","components/News/News.jsx","components/News/NewsContainer.jsx","redux/profile-reducer.js","api/api.js","utils/object-helpers.js","redux/users-reduser.js","components/common/Ppaginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.js","components/Login/Login.jsx","redux/app-reducer.js","redux/redux-store.js","App.js","index.js","components/Dialogs/Dialogs.module.css","components/common/FormsControls/FormsControls.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/user.jpg","components/common/Ppaginator/Paginator.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","ul","item","to","activeClassName","active","friends","avatar","src","Music","props","Settings","Friends","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","newMessage","newMessageBody","DialogItem","path","user","MessageItem","FormControl","input","meta","touched","error","children","hasError","formControl","Textarea","restProps","child","Input","createField","placeholder","validators","component","text","Field","validate","required","value","maxLenghtCreator","maxLength","length","maxLength50","reduxForm","form","onSubmit","handleSubmit","Dialogs","dialogsPage","dialogsElements","map","d","key","messageElements","m","newMessageText","dialogs_items","values","addMessage","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React","news","content","newsReducer","newText","newNewsText","newsText","NewsItem","AddNewsFormRedux","News","newsPage","newsElements","n","addNew","NewsContainer","posts","likesCount","profile","status","setStatus","getUserProfile","userId","a","usersAPI","getProfile","response","data","profileReducer","newPost","newPostText","filter","p","postId","photos","instance","axios","withCredentials","baseURL","headers","requestUsers","currentPage","pageSize","get","then","follow","post","unfollow","delete","console","warn","profileAPI","getStatus","updateStatus","put","savePhoto","photoFile","formData","FormData","append","saveProfile","authAPI","email","password","rememberMe","updateObjectInArray","items","itemId","objPropName","newObjProps","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","resultCode","usersReducer","followed","count","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","cn","selectedPage","pageNumber","e","User","small","userPhoto","disabled","some","Users","Preloader","preloader","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","bind","page","totalCount","Post","maxLength10","AddPostFormRedux","MyPosts","memo","log","postElements","profilePage","postsBlock","addPost","ProfileStatusWithHooks","editMode","setEditMode","useEffect","onDoubleClick","onChange","currentTarget","onBlur","autoFocus","ProfileDataFormReduxForm","sForm","formSummaryError","Object","keys","contacts","contact","ProfileData","isOwner","goToEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","description_block","large","target","files","initialValues","MyPostsContainer","Profile","ProfileContainer","params","authorizedUserId","history","refreshProfile","prevProps","prevState","file","getState","stopSubmit","Promise","reject","withRouter","Header","header","loginBlock","login","logout","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","LoginReduxForm","_error","initialized","appReducer","reducers","combineReducers","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","App","initializeApp","render","DialogsContainer","AppContainer","promise","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.561f961d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__8-0-s\",\"ul\":\"Navbar_ul__1gJEH\",\"item\":\"Navbar_item__2bByP\",\"active\":\"Navbar_active__2Fx7s\",\"friends\":\"Navbar_friends__11O9C\",\"avatar\":\"Navbar_avatar__ZVwOQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Users_avatar__1WP5U\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.1ffafb9d.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__jVVtY\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n        <ul className={s.ul}>\r\n            <li className={s.item}><NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink></li>\r\n            <li className={s.item}><NavLink to=\"/dialogs\" activeClassName={s.active} >Message</NavLink></li>\r\n            <li className={s.item}><NavLink to=\"/news\" activeClassName={s.active} >News</NavLink></li>\r\n            <li className={s.item}><NavLink to=\"/music\" activeClassName={s.active} >Music</NavLink></li>\r\n            <li className={s.item}><NavLink to=\"/settings\" activeClassName={s.active} >Settings</NavLink></li>\r\n\r\n\r\n\r\n            <div>\r\n                <div>\r\n                <li className={s.item + ' ' + s.friends}><NavLink to=\"/friends\" activeClassName={s.active} >Friends</NavLink></li>\r\n                </div>\r\n                <ul>\r\n                    <li><img className={s.avatar} src=\"https://cs9.pikabu.ru/post_img/big/2017/01/06/0/1483652153163869473.jpg\" />Adriana</li>\r\n                    <li><img className={s.avatar} src=\"https://pp.userapi.com/c855416/v855416570/9f462/9NJrz3aIiZQ.jpg\" />Roberto</li>\r\n                    <li><img className={s.avatar} src=\"https://ru1.anyfad.com/items/t1@39b8c2ad-babb-4e7d-a605-ef103a97049d/Chikano-Art.jpg\" />Gabriela</li>\r\n                </ul>\r\n            </div>\r\n\r\n            <li className={s.item}><NavLink to=\"/users\" activeClassName={s.active} >Users</NavLink></li>\r\n\r\n        </ul>\r\n    </nav>;\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.modules.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport s from './Friends.module.css';\r\n\r\nconst Friends = (props) => {\r\n    return (\r\n        <div>\r\n            <div> Friends</div>\r\n            <ul>\r\n                <li><img src=\"https://i.pinimg.com/originals/09/4f/c6/094fc6adfddb1ba0fc6f73083e7c03bf.jpg\" /></li>\r\n                <li>переделать</li>\r\n                <li></li>\r\n            </ul>\r\n           \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Friends;","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n// initialState - одноразовый объект, если state не придет в state - ты встанешь тудва вместо него \r\nlet initialState = {\r\n    dialogs: [\r\n        { id: '1', name: 'Adriana' },\r\n        { id: '2', name: 'Roberto' },\r\n        { id: '3', name: 'Gabriela' },\r\n        { id: '4', name: 'Gerardo' },\r\n        { id: '5', name: 'Camila' },\r\n        { id: '6', name: 'Silvia' }\r\n    ],\r\n    messages: [\r\n        { id: '1', message: 'hi' },\r\n        { id: '2', message: 'Hoy are you?' },\r\n        { id: '3', message: 'Yo' }\r\n    ]\r\n}\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    // делаем копию стейта, чтобы connect перерисовывал изменения\r\n    // так как в объекте есть еще объекты их надо тоже скопировать \r\n    // dialogs меняться не будет, поэтому его не копируем\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 4, message: newMessage }],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// action creator\r\nexport const addMessageActionCreator = (newMessageBody) => ({ type: ADD_MESSAGE, newMessageBody });\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return <li className={s.user + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </li>;\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst MessageItem = (props) => {\r\n    return <li className={s.message}>{props.message}</li>\r\n}\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport s from './FormsControls.module.css';\r\nimport { reduxForm, Field } from 'redux-form';\r\n\r\nconst FormControl = ({ input, meta:{touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n        <div>\r\n            {children}\r\n        </div>\r\n        {hasError && <span>{error}</span>}\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\n// 90 28:00\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}\r\n        /> {text}\r\n    </div>\r\n)\r\n\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\nexport const maxLenghtCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from 'react';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { required, maxLenghtCreator } from '../../../utils/validators/validators';\r\nimport { reduxForm, Field } from 'redux-form';\r\n\r\nconst maxLength50 = maxLenghtCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field validate={[required, maxLength50]} placeholder=\"Enter your message\" \r\n            name=\"newMessageBody\" component={Textarea} />\r\n        </div>\r\n        <div>\r\n            <button>Add message</button>\r\n        </div>\r\n    </form>\r\n}\r\nexport default reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport MessageItem from './MessageItem/MessageItem';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id} />);\r\n    let messageElements = state.messages.map(m => <MessageItem message={m.message} key={m.id} />);\r\n    let newMessageText = state.newMessageText;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (        \r\n        <div className={s.dialogs}>\r\n            <ul className={s.dialogs_items}>\r\n                {dialogsElements}\r\n            </ul>\r\n            <ul className={s.messages}>\r\n                {messageElements}\r\n            </ul>\r\n            <div>\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport { addMessageActionCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// compose берет Dialog, закидывает его в withAuthRedirect, далее результат закидывает в connect\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect // это hoc\r\n)(Dialogs);","const ADD_NEW = 'ADD-NEW';\r\n\r\n\r\nlet initialState = {\r\n    news: [\r\n        { id: '1', content: 'This is firs news' },\r\n        { id: '2', content: 'This is second news' },\r\n        { id: '3', content: 'This is third news' },\r\n        { id: '4', content: 'This is fourth news' }\r\n    ],\r\n}\r\n\r\n\r\nconst newsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW:\r\n            let newText = action.newNewsText;\r\n            return {\r\n                ...state,\r\n                news: [...state.news, {id: 5, content: newText} ],\r\n                newsText: ''\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// action creator\r\nexport const addNew = (newNewsText) => ({ type: ADD_NEW, newNewsText });\r\n\r\n\r\nexport default newsReducer;","import React from 'react';\r\nimport s from './../News.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NewsItem = (props) => {\r\n\r\n    return <li className={s.news}>\r\n        {props.content}\r\n    </li>;\r\n}\r\n\r\nexport default NewsItem;","import React from 'react';\r\nimport s from './News.module.css';\r\nimport NewsItem from './NewsItem/NewsItem';\r\nimport { reduxForm, Field } from 'redux-form';\r\n\r\nconst News = (props) => {\r\n\r\n    let state = props.newsPage;\r\n\r\n    let newsElements = state.news.map(n => <NewsItem content={n.content} id={n.id} />);\r\n    let newsText = state.newsText;\r\n\r\n\r\n    let onAddNews = (values) => {\r\n        props.addNew(values.newNewsText);\r\n    }\r\n    return (\r\n        <div>\r\n            News\r\n            <div>\r\n                <div>\r\n                    {newsElements}\r\n                </div>\r\n                \r\n                <div>\r\n                    <AddNewsFormRedux onSubmit={onAddNews} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddNewNewsForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder=\"Enter your news\" name=\"newNewsText\" component=\"textarea\" />\r\n        </div>\r\n        <div>\r\n            <button>Add news</button>\r\n        </div>\r\n    </form>\r\n}\r\nconst AddNewsFormRedux = reduxForm({form: 'profileAddNewPostForm'})(AddNewNewsForm);\r\nexport default News;\r\n\r\n","import React from 'react';\r\nimport { \r\n    addNew \r\n} from '../../redux/news-reducer';\r\nimport News from './News';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newsPage: state.newsPage\r\n    }\r\n}\r\n\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         onSendNewsClick: (newNewsText) => {\r\n//             dispatch(addNewActionCreator(newNewsText));\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\nconst NewsContainer = connect(mapStateToProps, {\r\n    addNew\r\n})(News);\r\n\r\nexport default NewsContainer;\r\n\r\n","import { usersAPI, profileAPI } from \"../api/api\";\r\nimport { async } from \"q\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: '1', message: 'Hi, how are you?', likesCount: 13 },\r\n        { id: '2', message: '123', likesCount: 19 },\r\n        { id: '3', message: 'dddddddddd', likesCount: 121 },\r\n        { id: '4', message: 'gdsgsdgsgsgs', likesCount: 1245 },\r\n        { id: '5', message: 'IccccxDDDx', likesCount: 9 }\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = action.newPostText;\r\n            return {\r\n                ...state,\r\n                newPostText: '',\r\n                posts: [...state.posts, { id: 6, message: newPost, likesCount: 0 }]\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// action creator\r\nexport const addPost = (newPostText) => ({ type: ADD_POST, newPostText });\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId });\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status });\r\nexport const savePhotoSuccess = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos });\r\nexport const saveProfileSuccess = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos });\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    const response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => { //97\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n       dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile', {\"_error\": response.data.messages[0]} ));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default profileReducer;\r\n\r\n","import * as axios from 'axios';\r\nimport { savePhoto } from '../redux/profile-reducer';\r\n\r\n// создание инстанса (у axios есть такая функция)\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"ae4c3a01-1d12-4498-85df-24268c218e2b\"\r\n    }\r\n});\r\nexport const usersAPI = {\r\n    requestUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI object');\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get('/profile/status/' + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('/profile/status/', {status: status});\r\n    },\r\n    savePhoto(photoFile) { // когда отправляем файл type не json  27:00 (96)\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile);\r\n\r\n        return instance.put('/profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) { \r\n        return instance.put('/profile', profile);\r\n    }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    //функция me возвращает promise\r\n    me() {\r\n        return instance.get('auth/me');\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post('auth/login', {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login');\r\n    },\r\n\r\n}\r\n\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {    //49 26:00\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n    \r\n}\r\n\r\n\r\n","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: \r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true} )\r\n            }\r\n        case UNFOLLOW: \r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false} )\r\n            }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\n// action который принемает  юзеров с сервера\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setUsersTotalCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\r\n\r\n// Thunk ===========================================\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        //api передали параметры\r\n        const data = await usersAPI.requestUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n    }\r\n}\r\n\r\n\r\n\r\n// объединили две функции в одну, чтобы уйти от дублирования кода \r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    const response = await apiMethod(userId);\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default usersReducer;\r\n\r\n","import React, {useState} from 'react';\r\nimport s from './Paginator.module.css';\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={s.paginator}>\r\n        {portionNumber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={cn({\r\n                    [s.selectedPage]: currentPage === p\r\n                }, s.pageNumber)}\r\n                    key={p}\r\n                    onClick={(e) => {\r\n                        onPageChanged(p);\r\n                    }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\r\n    </div>\r\n}\r\n\r\nexport default Paginator;                       ","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport userPhoto from '../../assets/images/user.jpg';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet User = ({ user, followingInProgress, unfollow, follow }) => {\r\n    return <div>\r\n        <span>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small != null\r\n                        ? user.photos.small\r\n                        : userPhoto} className={s.avatar} />\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress\r\n                        .some(id => id === user.id)}\r\n                        onClick={() => { unfollow(user.id) }}>\r\n                        Unfollow</button>\r\n\r\n                    : <button disabled={followingInProgress\r\n                        .some(id => id === user.id)}\r\n                        onClick={() => { follow(user.id) }}>\r\n                        Follow</button>}\r\n            </div>\r\n        </span>\r\n        <span>\r\n            <span>\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n            </span>\r\n            <span>\r\n                <div>{\"u.location.country\"}</div>\r\n                <div>{\"u.location.city\"}</div>\r\n            </span>\r\n        </span>\r\n    </div>\r\n}\r\nexport default User;","import React from 'react';\r\nimport Paginator from '../common/Ppaginator/Paginator';\r\nimport User from './User';\r\n\r\nlet Users = ({ currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props }) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage}\r\n            totalItemsCount={totalUsersCount}\r\n            pageSize={pageSize}\r\n            onPageChanged={onPageChanged} />\r\n        <div>\r\n            {\r\n                users.map(u => <User key={u.id}\r\n                    followingInProgress={props.followingInProgress}\r\n                    user={u}\r\n                    unfollow={props.unfollow}\r\n                    follow={props.follow}\r\n                />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport preloader from './../../../assets/images/preloader.gif';\r\n\r\nconst Preloader = (props) => {\r\n    return <div>\r\n    <img src={preloader}/>\r\n    </div> \r\n}\r\n\r\nexport default Preloader;","import { createSelector } from 'reselect';\r\n\r\n// fake filter for show reselect library\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getUsers = createSelector( getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n})\r\n// =====================================\r\n\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n} from '../../redux/users-reduser';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { compose } from \"redux\";\r\nimport { \r\n    getUsers,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getFollowingInProgress\r\n} from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        // диструктуризация эта может спасити от некоторых неочевидных ситуаций (статья Dan Abramov)\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    }\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n\r\n            <Users users={this.props.users}\r\n                pageSize={this.props.pageSize}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                toggleIsFetching={this.props.toggleIsFetching}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n// compose берет Dialog, закидывает его в withAuthRedirect, \r\n//далее результат закидывает в withRouter => connect\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers}),\r\n    //withAuthRedirect \r\n)(UsersContainer);","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return <div className={s.item}>\r\n        <img src=\"https://i.pinimg.com/originals/09/4f/c6/094fc6adfddb1ba0fc6f73083e7c03bf.jpg\" />\r\n        {props.message}\r\n        <div>\r\n            {props.likesCount}\r\n            <span> like</span>\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLenghtCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLenghtCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field validate={[required, maxLength10]} placeholder=\"Enter your post\"\r\n                name=\"newPostText\" component={Textarea} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\nconst AddPostFormRedux = reduxForm({ form: 'profileAddNewPostForm' })(AddNewPostForm);\r\n\r\n// для того, чтобы внутрення компонента не отрисоваыволась просто так - оборачиваем ее React.memo, но не работет..\r\nconst MyPosts = React.memo(props => {\r\n    console.log('RENDER')\r\n    let postElements = props.profilePage.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />);\r\n\r\n    const addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return <div className={s.postsBlock}>\r\n        <h3>My posts</h3>\r\n        <div>\r\n            <div>\r\n                <AddPostFormRedux onSubmit={addNewPost} />\r\n            </div>\r\n        </div>\r\n        <div className={s.posts}>\r\n            {postElements}\r\n        </div>\r\n    </div>;\r\n});\r\nexport default MyPosts;","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMod = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status</b>: <span onDoubleClick={activateEditMode} >{props.status || 'NOPE'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                        onBlur={deactivateEditMod}\r\n                        autoFocus={true}\r\n                        value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport sForm from '../../common/FormsControls/FormsControls.module.css';\r\nimport { reduxForm } from 'redux-form';\r\nimport { createField, Input, Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>Save</button></div>\r\n        {error && <div className={sForm.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n\r\n        <ul>\r\n            <li>\r\n                <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n            </li>\r\n            <li>\r\n                <b>About me</b>: {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n            </li>\r\n            <li>\r\n                <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: 'checkbox'})}\r\n            </li>\r\n\r\n        \r\n                <li>\r\n                    <b>My professionals skills</b>: {createField(\"My skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n                </li>\r\n            \r\n\r\n            <li>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                    return <div key={key} className={s.contact}>\r\n                        <d>{key}: {createField(key, \"contacts.\" + key, [], Input)}</d>\r\n                    </div>\r\n                })}\r\n            </li>\r\n        </ul>\r\n    </form>\r\n}\r\n\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/images/user.jpg';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    const mainPhotoSelectrd = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    const onSubmit = (formData) => { // 97 1:09:00\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <div>\r\n            <img className={s.panorama} src='https://wallimpex.com/data/out/642/3840-x-1080-hd-wallpaper-9980030.jpg' />\r\n        </div> */}\r\n            <div className={s.description_block}>\r\n                <img className={s.avatar} src={profile.photos.large || userPhoto} />\r\n                {isOwner && <input type={'file'} onChange={mainPhotoSelectrd} />}\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} /> //initialValues передаем profile, как стартовые значения\r\n                    : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\r\n            </div>\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n        </div>\r\n    )\r\n}\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    return <div>\r\n        <div>\r\n            {isOwner && <button onClick={goToEditMode}>Edit</button>}\r\n        </div>\r\n        <ul>\r\n            <li>\r\n                <b>Full name</b>: {profile.fullName}\r\n            </li>\r\n            <li>\r\n                <b>About me</b>: {profile.aboutMe || ' ---'}\r\n            </li>\r\n            <li>\r\n                <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </li>\r\n            {profile.lookingForAJob &&\r\n                <li>\r\n                    <b>My professionals skills</b>: {profile.lookingForAJobDescription}\r\n                </li>\r\n            }\r\n            <li>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n                })}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n}\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className={s.contact}>\r\n        <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPosts from './MyPosts';\r\nimport {\r\n    addPost\r\n} from '../../../redux/profile-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n    addPost\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';  // doesn`t needed?\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n    return <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} \r\n            updateStatus={props.updateStatus} isOwner={props.isOwner} \r\n            savePhoto={props.savePhoto} saveProfile={props.saveProfile}/>\r\n        <MyPostsContainer />\r\n    </div>;\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile\r\n} from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n \r\n    componentDidMount() {\r\n\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} \r\n            isOwner={!this.props.match.params.userId}\r\n            savePhoto={this.props.savePhoto}\r\n            profile={this.props.profile} \r\n            status={this.props.status} \r\n            updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status, \r\n    authorizedUserId:  state.auth.userId, \r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n// compose берет Dialog, закидывает его в withAuthRedirect, \r\n//далее результат закидывает в withRouter => connect\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    // withAuthRedirect   это hoc\r\n)(ProfileContainer);","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src=\"https://cdn2.iconfinder.com/data/icons/playstation-controller-buttons-3/64/playstation-flat-icon-triangle-dark-128.png\" />\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth \r\n                ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                : <NavLink to={\"/login\"}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'react-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// action creator\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        { userId, email, login, isAuth }\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let { id, login, email } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    const response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n        dispatch(stopSubmit('login', { _error: message }));\r\n    }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport {\r\n    logout\r\n} from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Input, createField } from '../common/FormsControls/FormsControls';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport s from './../common/FormsControls/FormsControls.module.css';\r\n\r\n\r\n\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        {createField(\"Email\", \"email\", [required], Input)}\r\n        {createField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\r\n        {createField(null, \"rememberMe\", [], Input, { type: \"checkbox\" }, \"remember me\")}\r\n        {error && <div className={s.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n    </form>\r\n}\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, { login })(Login);","import { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\nimport { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess()); //80 20:00\r\n        });\r\n\r\n}\r\nexport default appReducer;\r\n\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\"\r\nimport newsReducer from \"./news-reducer\"\r\nimport dialogsReducer from \"./dialogs-reducer\"\r\nimport usersReducer from \"./users-reduser\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\n// закомбаинили(создали) редюсеры\r\n// за каждую ветку отвечает свой редюсер \r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    newsPage: newsReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport Friends from './components/Friends/Friends';\r\nimport { Route } from \"react-router-dom\";\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport NewsContainer from './components/News/NewsContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { initializeApp } from './redux/app-reducer';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\n\r\nimport store from './redux/redux-store';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n    return (\r\n      <div className='app-wrapper'>\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className='app-wraper-content'>\r\n          <Route path='/dialogs'\r\n            render={() => <DialogsContainer />} />\r\n          <Route path='/profile/:userId?'\r\n            render={() => <ProfileContainer />} />\r\n          <Route path='/news'\r\n            render={() => <NewsContainer />} />\r\n          <Route path='/music'\r\n            render={() => <Music />} />\r\n          <Route path='/settings'\r\n            render={() => <Settings />} />\r\n          <Route path='/friends'\r\n            render={() => <Friends />} />\r\n          <Route path='/users'\r\n            render={() => <UsersContainer />} />\r\n\r\n          <Route path='/login'\r\n            render={() => <Login />} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n//оборачиваем withRouter чтобы не было багов\r\nconst AppContainer = compose(\r\n  connect(mapStateToProps, { initializeApp }),\r\n  withRouter)(App);\r\n\r\nconst SamuraiJSApp = props => {\r\n  return <BrowserRouter>\r\n    <Provider store={store}>\r\n      <AppContainer />\r\n    </Provider>\r\n  </BrowserRouter> \r\n}\r\n\r\nexport default SamuraiJSApp;\r\n","import * as serviceWorker from './serviceWorker';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from './App';\n\n\n\nReactDOM.render(<SamuraiJSApp />, document.getElementById('root'));\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1yYxH\",\"dialogs_items\":\"Dialogs_dialogs_items__3jH3z\",\"active\":\"Dialogs_active__3A4zG\",\"user\":\"Dialogs_user__1I2vG\",\"messages\":\"Dialogs_messages__2wBNS\",\"message\":\"Dialogs_message__2rz4m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1_eJJ\",\"error\":\"FormsControls_error__3Bj7o\",\"formSummaryError\":\"FormsControls_formSummaryError__18Me8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panorama\":\"ProfileInfo_panorama__2x1bh\",\"avatar\":\"ProfileInfo_avatar__MtgDS\",\"description_block\":\"ProfileInfo_description_block__37nh6\",\"contact\":\"ProfileInfo_contact__fOaRI\"};","module.exports = __webpack_public_path__ + \"static/media/user.8511e2cb.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__3DdOt\",\"pages\":\"Paginator_pages__27S-7\",\"paginator\":\"Paginator_paginator__1VpJV\",\"pageNumber\":\"Paginator_pageNumber__2Wz7u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__3_Ylb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1RC8r\",\"loginBlock\":\"Header_loginBlock__2BTFH\"};"],"sourceRoot":""}