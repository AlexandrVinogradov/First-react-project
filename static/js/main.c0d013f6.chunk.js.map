{"version":3,"sources":["assets/images/user.jpg","redux/dialogs-reducer.js","components/Users/Users.module.css","assets/images/preloader.gif","api/api.js","serviceWorker.js","components/Navbar/Navbar.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Friends/Friends.jsx","redux/news-reducer.js","components/News/NewsItem/NewsItem.jsx","components/News/News.jsx","components/News/NewsContainer.jsx","utils/object-helpers.js","redux/users-reduser.js","components/common/Ppaginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.js","components/Login/Login.jsx","redux/app-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","components/common/Preloader/Preloader.js","components/common/Ppaginator/Paginator.module.css","utils/validators/validators.js","components/Navbar/Navbar.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["module","exports","initialState","dialogs","id","name","messages","message","addMessageActionCreator","newMessageBody","type","dialogsReducer","state","action","newMessage","instance","axios","withCredentials","baseURL","headers","usersAPI","requestUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Navbar","className","s","nav","ul","item","to","activeClassName","active","friends","avatar","src","Music","props","Settings","Friends","news","content","newsReducer","newText","newNewsText","newsText","NewsItem","AddNewsFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","News","newsPage","newsElements","map","n","values","addNew","NewsContainer","connect","updateObjectInArray","items","itemId","objPropName","newObjProps","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","photos","small","userPhoto","disabled","some","Users","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","bind","page","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","error","createField","required","Input","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","promise","Promise","all","withRouter","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","validators","text","validate","preloader","value","maxLenghtCreator","maxLength","posts","likesCount","profile","addPost","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.c0d013f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.8511e2cb.jpg\";","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n// initialState - одноразовый объект, если state не придет в state - ты встанешь тудва вместо него \r\nlet initialState = {\r\n    dialogs: [\r\n        { id: '1', name: 'Adriana' },\r\n        { id: '2', name: 'Roberto' },\r\n        { id: '3', name: 'Gabriela' },\r\n        { id: '4', name: 'Gerardo' },\r\n        { id: '5', name: 'Camila' },\r\n        { id: '6', name: 'Silvia' }\r\n    ],\r\n    messages: [\r\n        { id: '1', message: 'hi' },\r\n        { id: '2', message: 'Hoy are you?' },\r\n        { id: '3', message: 'Yo' }\r\n    ]\r\n}\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    // делаем копию стейта, чтобы connect перерисовывал изменения\r\n    // так как в объекте есть еще объекты их надо тоже скопировать \r\n    // dialogs меняться не будет, поэтому его не копируем\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 4, message: newMessage }],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// action creator\r\nexport const addMessageActionCreator = (newMessageBody) => ({ type: ADD_MESSAGE, newMessageBody });\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Users_avatar__1WP5U\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.1ffafb9d.gif\";","import * as axios from 'axios';\r\n\r\n// создание инстанса (у axios есть такая функция)\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"ae4c3a01-1d12-4498-85df-24268c218e2b\"\r\n    }\r\n});\r\nexport const usersAPI = {\r\n    requestUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI object');\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get('/profile/status/' + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('/profile/status/', {status: status});\r\n    }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    //функция me возвращает promise\r\n    me() {\r\n        return instance.get('auth/me');\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post('auth/login', {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login');\r\n    },\r\n\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n        <ul className={s.ul}>\r\n            <li className={s.item}><NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink></li>\r\n            <li className={s.item}><NavLink to=\"/dialogs\" activeClassName={s.active} >Message</NavLink></li>\r\n            <li className={s.item}><NavLink to=\"/news\" activeClassName={s.active} >News</NavLink></li>\r\n            <li className={s.item}><NavLink to=\"/music\" activeClassName={s.active} >Music</NavLink></li>\r\n            <li className={s.item}><NavLink to=\"/settings\" activeClassName={s.active} >Settings</NavLink></li>\r\n\r\n\r\n\r\n            <div>\r\n                <div>\r\n                <li className={s.item + ' ' + s.friends}><NavLink to=\"/friends\" activeClassName={s.active} >Friends</NavLink></li>\r\n                </div>\r\n                <ul>\r\n                    <li><img className={s.avatar} src=\"https://cs9.pikabu.ru/post_img/big/2017/01/06/0/1483652153163869473.jpg\" />Adriana</li>\r\n                    <li><img className={s.avatar} src=\"https://pp.userapi.com/c855416/v855416570/9f462/9NJrz3aIiZQ.jpg\" />Roberto</li>\r\n                    <li><img className={s.avatar} src=\"https://ru1.anyfad.com/items/t1@39b8c2ad-babb-4e7d-a605-ef103a97049d/Chikano-Art.jpg\" />Gabriela</li>\r\n                </ul>\r\n            </div>\r\n\r\n            <li className={s.item}><NavLink to=\"/users\" activeClassName={s.active} >Users</NavLink></li>\r\n\r\n        </ul>\r\n    </nav>;\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.modules.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport s from './Friends.module.css';\r\n\r\nconst Friends = (props) => {\r\n    return (\r\n        <div>\r\n            <div> Friends</div>\r\n            <ul>\r\n                <li><img src=\"https://i.pinimg.com/originals/09/4f/c6/094fc6adfddb1ba0fc6f73083e7c03bf.jpg\" /></li>\r\n                <li>переделать</li>\r\n                <li></li>\r\n            </ul>\r\n           \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Friends;","const ADD_NEW = 'ADD-NEW';\r\n\r\n\r\nlet initialState = {\r\n    news: [\r\n        { id: '1', content: 'This is firs news' },\r\n        { id: '2', content: 'This is second news' },\r\n        { id: '3', content: 'This is third news' },\r\n        { id: '4', content: 'This is fourth news' }\r\n    ],\r\n}\r\n\r\n\r\nconst newsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW:\r\n            let newText = action.newNewsText;\r\n            return {\r\n                ...state,\r\n                news: [...state.news, {id: 5, content: newText} ],\r\n                newsText: ''\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// action creator\r\nexport const addNew = (newNewsText) => ({ type: ADD_NEW, newNewsText });\r\n\r\n\r\nexport default newsReducer;","import React from 'react';\r\nimport s from './../News.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NewsItem = (props) => {\r\n\r\n    return <li className={s.news}>\r\n        {props.content}\r\n    </li>;\r\n}\r\n\r\nexport default NewsItem;","import React from 'react';\r\nimport s from './News.module.css';\r\nimport NewsItem from './NewsItem/NewsItem';\r\nimport { reduxForm, Field } from 'redux-form';\r\n\r\nconst News = (props) => {\r\n\r\n    let state = props.newsPage;\r\n\r\n    let newsElements = state.news.map(n => <NewsItem content={n.content} id={n.id} />);\r\n    let newsText = state.newsText;\r\n\r\n\r\n    let onAddNews = (values) => {\r\n        props.addNew(values.newNewsText);\r\n    }\r\n    return (\r\n        <div>\r\n            News\r\n            <div>\r\n                <div>\r\n                    {newsElements}\r\n                </div>\r\n                \r\n                <div>\r\n                    <AddNewsFormRedux onSubmit={onAddNews} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddNewNewsForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder=\"Enter your news\" name=\"newNewsText\" component=\"textarea\" />\r\n        </div>\r\n        <div>\r\n            <button>Add news</button>\r\n        </div>\r\n    </form>\r\n}\r\nconst AddNewsFormRedux = reduxForm({form: 'profileAddNewPostForm'})(AddNewNewsForm);\r\nexport default News;\r\n\r\n","import React from 'react';\r\nimport { \r\n    addNew \r\n} from '../../redux/news-reducer';\r\nimport News from './News';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newsPage: state.newsPage\r\n    }\r\n}\r\n\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         onSendNewsClick: (newNewsText) => {\r\n//             dispatch(addNewActionCreator(newNewsText));\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\nconst NewsContainer = connect(mapStateToProps, {\r\n    addNew\r\n})(News);\r\n\r\nexport default NewsContainer;\r\n\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {    //49 26:00\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n    \r\n}\r\n\r\n\r\n","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: \r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true} )\r\n            }\r\n        case UNFOLLOW: \r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false} )\r\n            }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\n// action который принемает  юзеров с сервера\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setUsersTotalCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\r\n\r\n// Thunk ===========================================\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        //api передали параметры\r\n        const data = await usersAPI.requestUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n    }\r\n}\r\n\r\n\r\n\r\n// объединили две функции в одну, чтобы уйти от дублирования кода \r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    const response = await apiMethod(userId);\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default usersReducer;\r\n\r\n","import React, {useState} from 'react';\r\nimport s from './Paginator.module.css';\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={s.paginator}>\r\n        {portionNumber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={cn({\r\n                    [s.selectedPage]: currentPage === p\r\n                }, s.pageNumber)}\r\n                    key={p}\r\n                    onClick={(e) => {\r\n                        onPageChanged(p);\r\n                    }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\r\n    </div>\r\n}\r\n\r\nexport default Paginator;                       ","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport userPhoto from '../../assets/images/user.jpg';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet User = ({ user, followingInProgress, unfollow, follow }) => {\r\n    return <div>\r\n        <span>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small != null\r\n                        ? user.photos.small\r\n                        : userPhoto} className={s.avatar} />\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress\r\n                        .some(id => id === user.id)}\r\n                        onClick={() => { unfollow(user.id) }}>\r\n                        Unfollow</button>\r\n\r\n                    : <button disabled={followingInProgress\r\n                        .some(id => id === user.id)}\r\n                        onClick={() => { follow(user.id) }}>\r\n                        Follow</button>}\r\n            </div>\r\n        </span>\r\n        <span>\r\n            <span>\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n            </span>\r\n            <span>\r\n                <div>{\"u.location.country\"}</div>\r\n                <div>{\"u.location.city\"}</div>\r\n            </span>\r\n        </span>\r\n    </div>\r\n}\r\nexport default User;","import React from 'react';\r\nimport Paginator from '../common/Ppaginator/Paginator';\r\nimport User from './User';\r\n\r\nlet Users = ({ currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props }) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage}\r\n            totalItemsCount={totalUsersCount}\r\n            pageSize={pageSize}\r\n            onPageChanged={onPageChanged} />\r\n        <div>\r\n            {\r\n                users.map(u => <User key={u.id}\r\n                    followingInProgress={props.followingInProgress}\r\n                    user={u}\r\n                    unfollow={props.unfollow}\r\n                    follow={props.follow}\r\n                />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import { createSelector } from 'reselect';\r\n\r\n// fake filter for show reselect library\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getUsers = createSelector( getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n})\r\n// =====================================\r\n\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n} from '../../redux/users-reduser';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { compose } from \"redux\";\r\nimport { \r\n    getUsers,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getFollowingInProgress\r\n} from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        // диструктуризация эта может спасити от некоторых неочевидных ситуаций (статья Dan Abramov)\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    }\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n\r\n            <Users users={this.props.users}\r\n                pageSize={this.props.pageSize}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                toggleIsFetching={this.props.toggleIsFetching}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n// compose берет Dialog, закидывает его в withAuthRedirect, \r\n//далее результат закидывает в withRouter => connect\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers}),\r\n    //withAuthRedirect \r\n)(UsersContainer);","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src=\"https://cdn2.iconfinder.com/data/icons/playstation-controller-buttons-3/64/playstation-flat-icon-triangle-dark-128.png\" />\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth \r\n                ? <div>{props.login} - <button onClick={props.logout}>Logout</button></div>\r\n                : <NavLink to={\"/login\"}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'react-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// action creator\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        { userId, email, login, isAuth }\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let { id, login, email } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    const response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n        dispatch(stopSubmit('login', { _error: message }));\r\n    }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport {\r\n    logout\r\n} from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Input, createField } from '../common/FormsControls/FormsControls';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport s from './../common/FormsControls/FormsControls.module.css';\r\n\r\n\r\n\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        {createField(\"Email\", \"email\", [required], Input)}\r\n        {createField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\r\n        {createField(null, \"rememberMe\", [], Input, { type: \"checkbox\" }, \"remember me\")}\r\n        {error && <div className={s.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n    </form>\r\n}\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, { login })(Login);","import { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\nimport { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess()); //80 20:00\r\n        });\r\n\r\n}\r\nexport default appReducer;\r\n\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\"\r\nimport newsReducer from \"./news-reducer\"\r\nimport dialogsReducer from \"./dialogs-reducer\"\r\nimport usersReducer from \"./users-reduser\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\n// закомбаинили(создали) редюсеры\r\n// за каждую ветку отвечает свой редюсер \r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    newsPage: newsReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div>Loading...</div>}>\r\n        <Component {...props} /> \r\n        </React.Suspense>\r\n    };\r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport Friends from './components/Friends/Friends';\nimport { Route } from \"react-router-dom\";\nimport NewsContainer from './components/News/NewsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport { connect } from 'react-redux';\nimport { compose } from \"redux\";\nimport { withRouter } from 'react-router-dom';\nimport { initializeApp } from './redux/app-reducer';\nimport Preloader from './components/common/Preloader/Preloader';\nimport store from './redux/redux-store';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { withSuspense } from './hoc/withSuspense';\n\n// lazy.loading - не попадает в бандл при первичной загрузке\n// import DialogsContainer from './components/Dialogs/DialogsContainer';\n//но надо еще обернуть эти компоненты suspence или вызвать hoc withSuspense\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n    return (\n      <div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n        <div className='app-wraper-content'>\n\n          <Route path='/dialogs'\n            render={withSuspense(DialogsContainer)} /> \n\n          <Route path='/profile/:userId?'\n            render={withSuspense(ProfileContainer)} /> \n\n          <Route path='/news'\n            render={() => <NewsContainer />} />\n          <Route path='/music'\n            render={() => <Music />} />\n          <Route path='/settings'\n            render={() => <Settings />} />\n          <Route path='/friends'\n            render={() => <Friends />} />\n          <Route path='/users'\n            render={() => <UsersContainer />} />\n          <Route path='/login'\n            render={() => <Login />} />\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n//оборачиваем withRouter чтобы не было багов\nconst AppContainer = compose(\n  connect(mapStateToProps, { initializeApp }),\n  withRouter)(App);\n\nconst SamuraiJSApp = props => {\n  return <BrowserRouter>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </BrowserRouter>\n}\nexport default SamuraiJSApp;\n","import * as serviceWorker from './serviceWorker';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from './App';\n\n\n\nReactDOM.render(<SamuraiJSApp />, document.getElementById('root'));\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport s from './FormsControls.module.css';\r\nimport { reduxForm, Field } from 'redux-form';\r\n\r\nconst FormControl = ({ input, meta:{touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n        <div>\r\n            {children}\r\n        </div>\r\n        {hasError && <span>{error}</span>}\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\n// 90 28:00\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}\r\n        /> {text}\r\n    </div>\r\n)\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1_eJJ\",\"error\":\"FormsControls_error__3Bj7o\",\"formSummaryError\":\"FormsControls_formSummaryError__18Me8\"};","import React from 'react';\r\nimport preloader from './../../../assets/images/preloader.gif';\r\n\r\nconst Preloader = (props) => {\r\n    return <div>\r\n    <img src={preloader}/>\r\n    </div> \r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__3DdOt\",\"pages\":\"Paginator_pages__27S-7\",\"paginator\":\"Paginator_paginator__1VpJV\",\"pageNumber\":\"Paginator_pageNumber__2Wz7u\"};","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\nexport const maxLenghtCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__8-0-s\",\"ul\":\"Navbar_ul__1gJEH\",\"item\":\"Navbar_item__2bByP\",\"active\":\"Navbar_active__2Fx7s\",\"friends\":\"Navbar_friends__11O9C\",\"avatar\":\"Navbar_avatar__ZVwOQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1RC8r\",\"loginBlock\":\"Header_loginBlock__2BTFH\"};","import { usersAPI, profileAPI } from \"../api/api\";\r\nimport { async } from \"q\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: '1', message: 'Hi, how are you?', likesCount: 13 },\r\n        { id: '2', message: '123', likesCount: 19 },\r\n        { id: '3', message: 'dddddddddd', likesCount: 121 },\r\n        { id: '4', message: 'gdsgsdgsgsgs', likesCount: 1245 },\r\n        { id: '5', message: 'IccccxDDDx', likesCount: 9 }\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = action.newPostText;\r\n            return {\r\n                ...state,\r\n                newPostText: '',\r\n                posts: [...state.posts, { id: 6, message: newPost, likesCount: 0 }]\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// action creator\r\nexport const addPost = (newPostText) => ({ type: ADD_POST, newPostText });\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId });\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status });\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default profileReducer;\r\n\r\n"],"sourceRoot":""}